[{"/Users/hq/SoftwareDev/logger-demo/src/App.js":"1","/Users/hq/SoftwareDev/logger-demo/src/reportWebVitals.js":"2","/Users/hq/SoftwareDev/logger-demo/src/index.js":"3","/Users/hq/SoftwareDev/logger-demo/src/data/data.js":"4","/Users/hq/SoftwareDev/logger-demo/src/Logger/loggerToolbar.js":"5","/Users/hq/SoftwareDev/logger-demo/src/Logger/loggerRow.js":"6","/Users/hq/SoftwareDev/logger-demo/src/Logger/logger.js":"7"},{"size":2869,"mtime":1607454095844,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607437293988,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1607437293987,"results":"11","hashOfConfig":"9"},{"size":1905,"mtime":1607447044758,"results":"12","hashOfConfig":"9"},{"size":4117,"mtime":1607447453800,"results":"13","hashOfConfig":"9"},{"size":3031,"mtime":1607447453799,"results":"14","hashOfConfig":"9"},{"size":6374,"mtime":1607454222240,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"73kh4b",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hq/SoftwareDev/logger-demo/src/App.js",[],"/Users/hq/SoftwareDev/logger-demo/src/reportWebVitals.js",[],"/Users/hq/SoftwareDev/logger-demo/src/index.js",[],"/Users/hq/SoftwareDev/logger-demo/src/data/data.js",[],"/Users/hq/SoftwareDev/logger-demo/src/Logger/loggerToolbar.js",[],"/Users/hq/SoftwareDev/logger-demo/src/Logger/loggerRow.js",["31"],"import React, { useState, useEffect, memo } from 'react';\nimport { LOGGER_LINE_NUMBER_INDEX_DELTA } from './utils/constants';\nimport classNames from 'classnames';\nimport './styles/loggerRow.styles.scss';\nimport PropTypes from 'prop-types';\n\nconst LoggerRow = memo(({ index, style, data }) => {\n    const { parsedData, rowInFocus, highlightedRowIndexes, setHighlightedRowIndexes } = data;\n    const [ clickCounter, setClickCounter ] = useState(0);\n    const [ isHiglighted, setIsHiglighted ] = useState(false);\n    const [ rowSeen, setRowSeen ] = useState(false);\n\n    useEffect(() => {\n        let currentHighlightedIndexes = [];\n        let temp = 0;\n        currentHighlightedIndexes = highlightedRowIndexes;\n\n        console.log('This is my higlightedIndexes: ', highlightedRowIndexes); //eslint-disable-line\n        console.log('This is my currentHiglightedIndexes: ', currentHighlightedIndexes); //eslint-disable-line\n\n        if (isHiglighted && clickCounter > 0) {\n            currentHighlightedIndexes.push(index);\n            setHighlightedRowIndexes(currentHighlightedIndexes);\n        }\n        else if (!isHiglighted && clickCounter > 0) {\n            temp = currentHighlightedIndexes.indexOf(index);\n            currentHighlightedIndexes.splice(temp, 1);\n            setHighlightedRowIndexes(currentHighlightedIndexes);\n        }\n    }, [ isHiglighted ]);\n\n    // const lookForItemRow = (searchedInput) => {\n    //     const searchedIndex = parseInt(searchedInput);\n    //     loggerRef.current.scrollToItem(searchedIndex);\n    // };\n\n    const getData = (index) => {\n        return parsedData[ index ]; // Can use this function to later add wrapping for syntax highlighting (basic)\n    };\n\n    const getRowIndex = (index) => {\n        return (index + LOGGER_LINE_NUMBER_INDEX_DELTA);\n    };\n\n    const handleHighlightRow = () => {\n        const counter = clickCounter + 1;\n        setClickCounter(counter);\n        setIsHiglighted(!isHiglighted);\n    };\n\n    const handleMouseFocusEnter = () => {\n        if (rowInFocus !== index && rowSeen) {\n            return null;\n        }\n\n        setRowSeen(true);\n    };\n\n    const rowClassname = classNames('ins-logger-row cell__data-column',\n        {\n            'cell--highlighted': isHiglighted\n        },\n        {\n            'cell--inFocus': index === rowInFocus\n        }\n    );\n\n    return (\n        <div style={ style }\n            className='ins-logger-row'\n            onClick={ () => handleHighlightRow(index) }\n            onMouseEnter={ () => handleMouseFocusEnter() }\n        >\n            <span className='ins-logger-row cell__index-column'>\n                { getRowIndex(index) }\n            </span>\n            <span\n                className={ rowClassname }\n                onClick={ () => handleHighlightRow(index) }\n            >\n                { getData(index) }\n            </span>\n        </div>\n    );\n});\n\nLoggerRow.propTypes = {\n    index: PropTypes.number,\n    style: PropTypes.object,\n    data: PropTypes.object\n};\n\nexport default LoggerRow;\n","/Users/hq/SoftwareDev/logger-demo/src/Logger/logger.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":30,"column":8,"nodeType":"35","endLine":30,"endColumn":24,"suggestions":"36"},{"ruleId":"33","severity":1,"message":"37","line":89,"column":8,"nodeType":"35","endLine":89,"endColumn":10,"suggestions":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clickCounter', 'highlightedRowIndexes', 'index', and 'setHighlightedRowIndexes'. Either include them or remove the dependency array.","ArrayExpression",["39"],"React Hook useEffect has missing dependencies: 'data.console' and 'isParentDataString'. Either include them or remove the dependency array. If 'setParsedData' needs the current value of 'data.console', you can also switch to useReducer instead of useState and read 'data.console' in the reducer.",["40"],{"desc":"41","fix":"42"},{"desc":"43","fix":"44"},"Update the dependencies array to be: [clickCounter, highlightedRowIndexes, index, isHiglighted, setHighlightedRowIndexes]",{"range":"45","text":"46"},"Update the dependencies array to be: [data.console, isParentDataString]",{"range":"47","text":"48"},[1350,1366],"[clickCounter, highlightedRowIndexes, index, isHiglighted, setHighlightedRowIndexes]",[2729,2731],"[data.console, isParentDataString]"]